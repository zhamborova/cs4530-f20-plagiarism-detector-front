{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasmin/WebstormProjects/software-front-ts/my-app/src/components/file-upload.tsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FileUpload = props => {\n  const {\n    setFile,\n    fileName,\n    uploaded\n  } = props;\n  return uploaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex mb-3 upload-item\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-file\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"custom-file-input\",\n          type: \"file\",\n          id: \"file\",\n          accept: \".zip\",\n          onChange: event => setFile(fileName, event.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"custom-file-label\",\n          children: [\"Choose project \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upload-success-txt mr-auto\",\n      children: [\" Project \", fileName, \" is uploaded \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: \"remove-file-icon\",\n      icon: faTimes,\n      onClick: () => setFile(fileName, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Users/yasmin/WebstormProjects/software-front-ts/my-app/src/components/file-upload.tsx"],"names":["React","FontAwesomeIcon","faTimes","FileUpload","props","setFile","fileName","uploaded","event","target","files","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,OAAR,QAAsB,mCAAtB;;AASA,MAAMC,UAAU,GAAIC,KAAD,IAA0B;AAE1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAiCH,KAAvC;AAEC,SAAQG,QAAQ,gBAAG;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,2BACf;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACA;AAAO,UAAA,SAAS,EAAC,mBAAjB;AACG,UAAA,IAAI,EAAC,MADR;AAEG,UAAA,EAAE,EAAC,MAFN;AAGG,UAAA,MAAM,EAAC,MAHV;AAIG,UAAA,QAAQ,EAAEC,KAAK,IAAIH,OAAO,CAACC,QAAD,EAAUE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAoB,CAApB,CAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBADA,eAMJ;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAA,wCAAsDJ,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBANI;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADe;AAAA;AAAA;AAAA;AAAA,UAAH,gBAYhB;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACA;AAAG,MAAA,SAAS,EAAC,4BAAb;AAAA,8BAAoDA,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,kBAA3B;AAA8C,MAAA,IAAI,EAAEJ,OAApD;AACA,MAAA,OAAO,EAAE,MAAKG,OAAO,CAACC,QAAD,EAAWK,SAAX;AADrB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZA;AAmBH,CAvBD;;KAAMR,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface FileUploadProps {\n    setFile: (name: string, file?: Blob)=>void,\n    fileName:string,\n    uploaded: boolean\n\n}\n\nconst FileUpload = (props:FileUploadProps)=> {\n\n   const { setFile, fileName, uploaded} = props\n\n    return  uploaded ? <div className=\"d-flex mb-3 upload-item\">\n        <div className=\"input-group\">\n        <div className=\"custom-file\">\n        <input className=\"custom-file-input\"\n           type=\"file\"\n           id=\"file\"\n           accept=\".zip\"\n           onChange={event => setFile(fileName,event.target.files![0])}/>\n    <label className=\"custom-file-label\" >Choose project {fileName}</label>\n    </div>\n    </div>\n    </div> :\n    <div className=\"d-flex\">\n    <p className=\"upload-success-txt mr-auto\"> Project {fileName} is uploaded </p>\n    <FontAwesomeIcon className=\"remove-file-icon\" icon={faTimes}\n    onClick={()=> setFile(fileName, undefined)}/>\n    </div>\n\n\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}