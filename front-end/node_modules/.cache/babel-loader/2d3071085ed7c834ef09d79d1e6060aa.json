{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/folder/folder.tsx\";\nimport React from \"react\";\nimport { instanceOfFileItem } from \"../file/file.utils\";\n/**\n * @class Folder\n * Represents a folder in a directory\n * @description responsible for showing and hiding its sub-directories/files\n */\n\nclass Folder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.handleToggle = e => {\n      e.preventDefault();\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.shouldOpen = (children, curSimilarityId) => {\n      return children.some(item => {\n        if (instanceOfFileItem(item)) {\n          return item.similarities.some(s => s.id === curSimilarityId);\n        } else {\n          return this.shouldOpen(item.children, curSimilarityId);\n        }\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      children,\n      current\n    } = this.props;\n\n    if (current !== prevProps.current) {\n      if (this.shouldOpen(children.props.data, current)) {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }\n  }\n  /**\n   * Show or hide folder sub directories\n   * @param e\n   */\n\n\n  render() {\n    const {\n      name,\n      children\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: e => this.handleToggle(e),\n        children: [name, \"/\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpen ? `d-block pl-2` : `d-none`,\n        children: children\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Folder;","map":{"version":3,"sources":["/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/folder/folder.tsx"],"names":["React","instanceOfFileItem","Folder","Component","state","isOpen","handleToggle","e","preventDefault","setState","shouldOpen","children","curSimilarityId","some","item","similarities","s","id","componentDidUpdate","prevProps","prevState","snapshot","current","props","data","render","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAkBC,kBAAlB,QAA2C,oBAA3C;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAN,SAAsBF,KAAK,CAACG,SAA5B,CAA8D;AAAA;AAAA;AAAA,SAC1DC,KAD0D,GAClD;AACJC,MAAAA,MAAM,EAAE;AADJ,KADkD;;AAAA,SAkB1DC,YAlB0D,GAkB1CC,CAAD,IAA0C;AACrDA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAArB,OAAd;AACH,KArByD;;AAAA,SA6B1DK,UA7B0D,GA6B7C,CAACC,QAAD,EAAmCC,eAAnC,KAAsE;AAC/E,aAAOD,QAAQ,CAACE,IAAT,CAAcC,IAAI,IAAI;AACzB,YAAIb,kBAAkB,CAACa,IAAD,CAAtB,EAA8B;AAC1B,iBAAOA,IAAI,CAACC,YAAL,CAAkBF,IAAlB,CAAuBG,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,eAArC,CAAP;AACH,SAFD,MAGM;AACF,iBAAO,KAAKF,UAAL,CAAgBI,IAAI,CAACH,QAArB,EAA+BC,eAA/B,CAAP;AACH;AACJ,OAPM,CAAP;AASH,KAvCyD;AAAA;;AAK1DM,EAAAA,kBAAkB,CAACC,SAAD,EAAwBC,SAAxB,EAA+CC,QAA/C,EAA6D;AAC3E,UAAM;AAACV,MAAAA,QAAD;AAAUW,MAAAA;AAAV,QAAqB,KAAKC,KAAhC;;AACA,QAAGD,OAAO,KAAKH,SAAS,CAACG,OAAzB,EAAiC;AAC7B,UAAG,KAAKZ,UAAL,CAAgBC,QAAQ,CAACY,KAAT,CAAeC,IAA/B,EAAqCF,OAArC,CAAH,EAAiD;AAC7C,aAAKb,QAAL,CAAc;AAACJ,UAAAA,MAAM,EAAE;AAAT,SAAd;AACH;AACJ;AACJ;AAED;AACJ;AACA;AACA;;;AAuBIoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQf,MAAAA;AAAR,QAAoB,KAAKY,KAA/B;AACA,UAAM;AAAClB,MAAAA;AAAD,QAAW,KAAKD,KAAtB;AAEA,wBACI;AAAA,8BACI;AAAM,QAAA,OAAO,EAAGG,CAAD,IAAK,KAAKD,YAAL,CAAkBC,CAAlB,CAApB;AAAA,mBAA2CmB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAErB,MAAM,GAAI,cAAJ,GAAqB,QAA3C;AAAA,kBACiBM;AADjB,SACUe,IADV;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAnDyD;;AAoD7D;AAGD,eAAexB,MAAf","sourcesContent":["import React from \"react\";\nimport {FolderItem, FolderProps, FolderState} from \"./folder.utils\";\nimport {FileItem, instanceOfFileItem} from \"../file/file.utils\";\n\n/**\n * @class Folder\n * Represents a folder in a directory\n * @description responsible for showing and hiding its sub-directories/files\n */\nclass Folder  extends React.Component<FolderProps,FolderState>{\n    state = {\n        isOpen: false\n    }\n\n    componentDidUpdate(prevProps:FolderProps, prevState:FolderState, snapshot:any) {\n        const {children,current} = this.props;\n        if(current !== prevProps.current){\n            if(this.shouldOpen(children.props.data, current)){\n                this.setState({isOpen: true})\n            }\n        }\n    }\n\n    /**\n     * Show or hide folder sub directories\n     * @param e\n     */\n    handleToggle = (e: React.MouseEvent<HTMLSpanElement>) => {\n        e.preventDefault();\n        this.setState({isOpen: !this.state.isOpen});\n    };\n\n    /**\n     * Should the folder be opened?\n     * Initially only opened if files inside contain current similarity\n     * @param children sub-directories of a folder\n     * @param curSimilarityId\n     */\n    shouldOpen = (children:(FileItem|FolderItem)[], curSimilarityId:string):boolean => {\n        return children.some(item => {\n            if (instanceOfFileItem(item)) {\n                return item.similarities.some(s => s.id === curSimilarityId)\n            }\n            else  {\n                return this.shouldOpen(item.children, curSimilarityId)\n            }\n        });\n\n    }\n    render() {\n        const { name, children} = this.props;\n        const {isOpen} = this.state;\n\n        return (\n            <div>\n                <span onClick={(e)=>this.handleToggle(e)}>{name}/</span>\n                <div className={isOpen ? `d-block pl-2` : `d-none`}\n                     key={name}>{children}</div>\n            </div>\n        );\n    }\n};\n\n\nexport default Folder;\n\n\n"]},"metadata":{},"sourceType":"module"}