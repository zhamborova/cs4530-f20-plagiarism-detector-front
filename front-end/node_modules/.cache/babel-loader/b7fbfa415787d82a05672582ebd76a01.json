{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/directory/directory.tsx\";\nimport React from \"react\";\nimport { instanceOfFileItem } from \"../file/file-interfaces\";\nimport File from '../file/file';\nimport Folder from \"../folder/folder\";\n\n/**\n * @class Directory\n * This class is responsible for all Files/Folders display and logic\n */\nclass Directory extends React.Component {\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return nextProps.curSimilarityId !== this.props.curSimilarityId;\n  }\n\n  render() {\n    return this.props.data.map(item => {\n      if (instanceOfFileItem(item)) {\n        return /*#__PURE__*/_jsxDEV(File, {\n          item: item,\n          setFile: this.props.setFile,\n          current: this.props.curSimilarityId\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Folder, {\n          name: item.name,\n          current: this.props.curSimilarityId,\n          children: /*#__PURE__*/_jsxDEV(Directory, {\n            data: item.children,\n            setFile: this.props.setFile,\n            curSimilarityId: this.props.curSimilarityId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n}\n\n;\nexport default Directory;","map":{"version":3,"sources":["/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/directory/directory.tsx"],"names":["React","instanceOfFileItem","File","Folder","Directory","Component","shouldComponentUpdate","nextProps","nextState","nextContext","curSimilarityId","props","render","data","map","item","setFile","name","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAkBC,kBAAlB,QAA2C,yBAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AASA;AACA;AACA;AACA;AACA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuD;AAEnDC,EAAAA,qBAAqB,CAACC,SAAD,EACCC,SADD,EACiBC,WADjB,EAC4C;AAC7D,WAAOF,SAAS,CAACG,eAAV,KAA8B,KAAKC,KAAL,CAAWD,eAAhD;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AAC/B,UAAId,kBAAkB,CAACc,IAAD,CAAtB,EAA8B;AAC1B,4BAAO,QAAC,IAAD;AAAsB,UAAA,IAAI,EAAEA,IAA5B;AACM,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAD1B;AAEM,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWD;AAF1B,WAAWK,IAAI,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGH,OAJD,MAKK;AACD,4BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEF,IAAI,CAACE,IAAnB;AAAyC,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWD,eAA7D;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEK,IAAI,CAACG,QAAtB;AACW,YAAA,OAAO,EAAE,KAAKP,KAAL,CAAWK,OAD/B;AAEW,YAAA,eAAe,EAAE,KAAKL,KAAL,CAAWD;AAFvC;AAAA;AAAA;AAAA;AAAA;AADJ,WAA8BK,IAAI,CAACE,IAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;AACJ,KAfM,CAAP;AAeI;;AAvB2C;;AAwBtD;AAED,eAAiBb,SAAjB","sourcesContent":["import React from \"react\"\nimport {FolderItem} from '../folder/folder-interfaces'\nimport {FileItem, instanceOfFileItem} from \"../file/file-interfaces\";\nimport File from '../file/file'\nimport Folder from \"../folder/folder\"\n\nexport interface DirectoryProps{\n    curSimilarityId:string,\n    data:(FolderItem|FileItem)[]\n    setFile:  (file:FileItem)=>void,\n}\n\n\n/**\n * @class Directory\n * This class is responsible for all Files/Folders display and logic\n */\nclass Directory extends React.Component<DirectoryProps>{\n\n    shouldComponentUpdate(nextProps: Readonly<DirectoryProps>,\n                          nextState: any, nextContext: any): boolean {\n        return nextProps.curSimilarityId !== this.props.curSimilarityId\n    }\n\n    render(){\n        return this.props.data.map(item => {\n            if (instanceOfFileItem(item)) {\n                return <File key={item.name} item={item}\n                             setFile={this.props.setFile}\n                             current={this.props.curSimilarityId}/>\n            }\n            else {\n                return (\n                    <Folder name={item.name} key={item.name} current={this.props.curSimilarityId} >\n                        <Directory data={item.children}\n                                   setFile={this.props.setFile}\n                                   curSimilarityId={this.props.curSimilarityId}/>\n                    </Folder>\n                );\n            }\n        });}\n};\n\nexport  default  Directory;\n\n\n\n"]},"metadata":{},"sourceType":"module"}