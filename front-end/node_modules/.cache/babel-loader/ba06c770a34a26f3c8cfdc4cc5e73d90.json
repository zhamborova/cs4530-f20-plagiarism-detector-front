{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/file/file.tsx\";\nimport React from \"react\";\nconst color = \"rgb(235, 233, 233)\";\n\nclass File extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: \"transparent\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      item,\n      setFile,\n      current\n    } = this.props;\n    console.log(this.props);\n\n    if (item.similarities.some(s => s.id === current)) {\n      setFile(item);\n      this.setState({\n        highlight: color\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let {\n      item,\n      setFile,\n      current\n    } = this.props;\n\n    if (prevProps.current !== current) {\n      if (item.similarities.some(s => s.id === current)) {\n        setFile(item);\n        this.setState({\n          highlight: color\n        });\n      } else {\n        this.setState({\n          highlight: \"transparent\"\n        });\n      }\n    }\n  }\n\n  render() {\n    let {\n      item,\n      setFile\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `d-block`,\n      style: {\n        backgroundColor: this.state.highlight\n      },\n      onClick: () => setFile(item),\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default File;","map":{"version":3,"sources":["/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/file/file.tsx"],"names":["React","color","File","Component","constructor","props","state","highlight","componentDidMount","item","setFile","current","console","log","similarities","some","s","id","setState","componentDidUpdate","prevProps","prevState","snapshot","render","backgroundColor","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,oBAAd;;AAGA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAwD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAkB;AACzB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAE;AADJ,KAAX;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKN,KAAtC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;;AACA,QAAGI,IAAI,CAACK,YAAL,CAAkBC,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,OAArC,CAAH,EAAiD;AAC7CD,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,WAAKS,QAAL,CAAc;AAACX,QAAAA,SAAS,EAACN;AAAX,OAAd;AACH;AACJ;;AACDkB,EAAAA,kBAAkB,CAACC,SAAD,EAAsBC,SAAtB,EAA0CC,QAA1C,EAAwD;AACtE,QAAI;AAACb,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKN,KAApC;;AACA,QAAGe,SAAS,CAACT,OAAV,KAAsBA,OAAzB,EAAkC;AAC9B,UAAGF,IAAI,CAACK,YAAL,CAAkBC,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,OAArC,CAAH,EAAiD;AAC7CD,QAAAA,OAAO,CAACD,IAAD,CAAP;AACA,aAAKS,QAAL,CAAc;AAACX,UAAAA,SAAS,EAACN;AAAX,SAAd;AACH,OAHD,MAII;AACA,aAAKiB,QAAL,CAAc;AAACX,UAAAA,SAAS,EAAC;AAAX,SAAd;AACH;AACJ;AACJ;;AAGDgB,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACd,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAkB,KAAKL,KAA3B;AACA,wBAAO;AAAM,MAAA,SAAS,EAAG,SAAlB;AACM,MAAA,KAAK,EAAE;AAACmB,QAAAA,eAAe,EAAE,KAAKlB,KAAL,CAAWC;AAA7B,OADb;AAEM,MAAA,OAAO,EAAE,MAAKG,OAAO,CAACD,IAAD,CAF3B;AAAA,gBAGUA,IAAI,CAACgB;AAHf;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH;;AAnCmD;;AAsCxD,eAAevB,IAAf","sourcesContent":["import React from \"react\";\nimport {FileProps, FileState} from \"./file-interfaces\";\nconst color = \"rgb(235, 233, 233)\";\n\n\nclass File extends React.Component<FileProps, FileState>{\n    constructor(props:FileProps) {\n        super(props);\n        this.state={\n            highlight: \"transparent\"\n        }\n    }\n    componentDidMount() {\n        const {item, setFile, current} = this.props\n        console.log(this.props)\n        if(item.similarities.some(s => s.id === current)){\n            setFile(item)\n            this.setState({highlight:color})\n        }\n    }\n    componentDidUpdate(prevProps:FileProps, prevState:FileState,snapshot:any) {\n        let {item, setFile, current} = this.props\n        if(prevProps.current !== current) {\n            if(item.similarities.some(s => s.id === current)){\n                setFile(item)\n                this.setState({highlight:color})\n            }\n            else{\n                this.setState({highlight:\"transparent\"})\n            }\n        }\n    }\n\n\n    render(){\n        let {item, setFile} = this.props\n        return <span className={`d-block`}\n                     style={{backgroundColor: this.state.highlight}}\n                     onClick={()=> setFile(item)}>\n                        {item.name}</span>\n    }\n}\n\nexport default File;\n"]},"metadata":{},"sourceType":"module"}