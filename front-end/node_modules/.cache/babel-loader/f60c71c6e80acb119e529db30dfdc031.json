{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/code/code.tsx\";\nimport React from \"react\";\nimport './code.css';\n\nclass Code extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contents: {}\n    };\n\n    this.highlight = i => {\n      let col = \"\";\n      col = this.props.similarities.some(s => s.startLine <= i && i <= s.endLine) ? \"red\" : \"\";\n      this.props.similarities.forEach(s => {\n        if (s.id === this.props.current && s.startLine <= i && i <= s.endLine) {\n          col = \"red-current\";\n        }\n      });\n      return col;\n    };\n\n    this.setRef = (i, elem) => {\n      this.props.similarities.forEach(s => {\n        if (i === s.startLine) {\n          this[`${s.id}`] = elem;\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let {\n      current,\n      contents\n    } = this.props;\n\n    if (current) {\n      setTimeout(() => {\n        if (this[current]) {\n          this[current].scrollIntoView();\n        }\n      }, 10);\n    }\n\n    if (contents) {\n      this.setState({\n        contents\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let {\n      current,\n      contents\n    } = this.props;\n\n    if (prevProps && prevProps.current !== current) {\n      setTimeout(() => {\n        if (this[current]) {\n          this[current].scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }\n      }, 10);\n    }\n\n    if (prevProps && prevProps.contents !== contents) {\n      this.setState({\n        contents\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-container\",\n      children: Object.keys(this.state.contents).map((key, i) => /*#__PURE__*/_jsxDEV(\"code\", {\n        className: this.highlight(i),\n        ref: elem => this.setRef(i, elem),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"index\",\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), this.state.contents[key]]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Code;","map":{"version":3,"sources":["/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/code/code.tsx"],"names":["React","Code","Component","state","contents","highlight","i","col","props","similarities","some","s","startLine","endLine","forEach","id","current","setRef","elem","componentDidMount","setTimeout","scrollIntoView","setState","componentDidUpdate","prevProps","prevState","snapshot","behavior","render","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './code.css'\nimport {Similarity} from \"../file/file-interfaces\";\n\ninterface CodeProps {\n    contents: { [key: string]: string; },\n    current:string,\n    similarities: (Similarity)[]\n}\ninterface CodeState {\n    contents: { [key: string]: string; }\n}\n\nclass Code extends React.Component<CodeProps,CodeState>{\n\n\n    state={\n      contents: {},\n    }\n\n    componentDidMount() {\n        let {current, contents} = this.props\n\n        if(current){\n            setTimeout(() => {\n                if(this[current]) {\n                    this[current].scrollIntoView()\n                }\n            }, 10);\n\n        }\n        if(contents){\n            this.setState({contents})\n        }\n    }\n\n\n    componentDidUpdate(prevProps:CodeProps, prevState:CodeState, snapshot:any) {\n        let {current, contents} = this.props\n\n        if(prevProps && prevProps.current !== current){\n\n\n            setTimeout(() => {\n                if(this[current]) {\n                    this[current].scrollIntoView({behavior:\"smooth\"})\n                }\n            }, 10);\n        }\n        if(prevProps && prevProps.contents !== contents){\n            this.setState({contents})\n        }\n\n    }\n\n\n\n\n    highlight = (i:number) =>{\n\n        let col = \"\"\n        col = this.props.similarities.some(s => s.startLine <= i && i <= s.endLine) ? \"red\" : \"\"\n        this.props.similarities.forEach(s => {\n            if(s.id === this.props.current && s.startLine <= i && i <= s.endLine){\n                col = \"red-current\"\n            }\n\n        })\n\n        return col;\n    }\n\n    //map ref to similarity id\n    setRef = (i:number, elem:React.ReactHTMLElement<any>) =>{\n        this.props.similarities.forEach(s => {\n\n            if(i === s.startLine){\n                this[`${s.id}`] = elem\n\n            }})\n\n    }\n\n    render() {\n\n        return <div className=\"file-container\">\n\n\n            {Object.keys(this.state.contents).map((key, i) => (\n\n                <code key={i} className={this.highlight(i)}\n                      ref={elem =>this.setRef(i, elem)}>\n\n                    <span className=\"index\" >{i}</span>\n                    {this.state.contents[key]}\n                 </code>))\n            }\n        </div>\n    }\n}\n\n\nexport default Code;\n"]},"metadata":{},"sourceType":"module"}