{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/directory/directory.tsx\";\nimport React from \"react\";\nimport { instanceOfFileItem } from \"../file/file-interfaces\";\nimport File from '../file/file';\nimport Folder from \"../folder/folder\";\n\nclass Directory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      current: this.props.current\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.current !== this.props.current) {\n      this.setState({\n        current: this.props.current\n      });\n    }\n  }\n\n  render() {\n    return this.props.data.map(item => {\n      if (instanceOfFileItem(item)) {\n        return /*#__PURE__*/_jsxDEV(File, {\n          item: item,\n          setFile: this.props.setFile,\n          current: this.state.current\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Folder, {\n          name: item.name,\n          current: this.state.current,\n          children: /*#__PURE__*/_jsxDEV(Directory, {\n            data: item.children,\n            setFile: this.props.setFile,\n            current: this.state.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n}\n\n;\nexport default Directory;","map":{"version":3,"sources":["/Users/yasmin/WebstormProjects/software-front-ts/front-end/src/components/directory/directory.tsx"],"names":["React","instanceOfFileItem","File","Folder","Directory","Component","state","current","componentDidMount","setState","props","componentDidUpdate","prevProps","prevState","snapshot","render","data","map","item","setFile","name","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAkBC,kBAAlB,QAA2C,yBAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAaA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuE;AAAA;AAAA;AAAA,SACnEC,KADmE,GAC3D;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2D;AAAA;;AAKnEC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAACF,MAAAA,OAAO,EAAE,KAAKG,KAAL,CAAWH;AAArB,KAAd;AACH;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAA2BC,SAA3B,EAAqDC,QAArD,EAAmE;AACjF,QAAGF,SAAS,CAACL,OAAV,KAAsB,KAAKG,KAAL,CAAWH,OAApC,EAA4C;AACxC,WAAKE,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE,KAAKG,KAAL,CAAWH;AAArB,OAAd;AACH;AACJ;;AAIDQ,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AAC/B,UAAIjB,kBAAkB,CAACiB,IAAD,CAAtB,EAA8B;AAC1B,4BAAO,QAAC,IAAD;AAAsB,UAAA,IAAI,EAAEA,IAA5B;AAAkC,UAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,OAAtD;AAA+D,UAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC;AAAnF,WAAWW,IAAI,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGK;AACD,4BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEF,IAAI,CAACE,IAAnB;AAAyC,UAAA,OAAO,EAAE,KAAKd,KAAL,CAAWC,OAA7D;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEW,IAAI,CAACG,QAAtB;AAAgC,YAAA,OAAO,EAAE,KAAKX,KAAL,CAAWS,OAApD;AAA6D,YAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC;AAAjF;AAAA;AAAA;AAAA;AAAA;AADJ,WAA8BW,IAAI,CAACE,IAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;AACJ,KAXM,CAAP;AAWI;;AA7B2D;;AA8BtE;AAED,eAAiBhB,SAAjB","sourcesContent":["import React from \"react\"\nimport {FolderItem} from '../folder/folder-interfaces'\nimport {FileItem, instanceOfFileItem} from \"../file/file-interfaces\";\nimport File from '../file/file'\nimport Folder from \"../folder/folder\"\n\nexport interface DirectoryProps{\n    current:string,\n    data:(FolderItem|FileItem)[]\n    setFile:  (file:FileItem)=>void,\n}\n\nexport interface DirectoryState{\n    current:string,\n}\n\n\nclass Directory extends React.Component<DirectoryProps, DirectoryState>{\n    state = {\n        current: \"\"\n    }\n\n    componentDidMount() {\n        this.setState({current: this.props.current})\n    }\n\n    componentDidUpdate(prevProps:DirectoryProps, prevState:DirectoryState, snapshot:any) {\n        if(prevProps.current !== this.props.current){\n            this.setState({current: this.props.current})\n        }\n    }\n\n\n\n    render(){\n        return this.props.data.map(item => {\n            if (instanceOfFileItem(item)) {\n                return <File key={item.name} item={item} setFile={this.props.setFile} current={this.state.current}/>\n            }\n            else {\n                return (\n                    <Folder name={item.name} key={item.name} current={this.state.current} >\n                        <Directory data={item.children} setFile={this.props.setFile} current={this.state.current}/>\n                    </Folder>\n                );\n            }\n        });}\n};\n\nexport  default  Directory;\n\n\n\n"]},"metadata":{},"sourceType":"module"}